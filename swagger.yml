swagger: '2.0'
info:
    version: v1
    title: Halcyon Api
    description: A Node.js api project template.

securityDefinitions:
    bearer:
        name: Authorization
        in: header
        type: apiKey

paths:
    /api/Account/Register:
        post:
            tags:
                - Account
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/RegisterModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Account/RegisterExternal:
        post:
            tags:
                - Account
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/RegisterExternalModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Account/ForgotPassword:
        put:
            tags:
                - Account
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/ForgotPasswordModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Account/ResetPassword:
        put:
            tags:
                - Account
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/ResetPasswordModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Manage:
        get:
            tags:
                - Manage
            produces:
                - application/json
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel[ProfileModel]'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

        put:
            tags:
                - Manage
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/UpdateProfileModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

        delete:
            tags:
                - Manage
            produces:
                - application/json
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Manage/VerifyEmail:
        put:
            tags:
                - Manage
            produces:
                - application/json
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Manage/ConfirmEmail:
        put:
            tags:
                - Manage
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/ConfirmEmailModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Manage/ChangePassword:
        put:
            tags:
                - Manage
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/ChangePasswordModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Manage/SetPassword:
        put:
            tags:
                - Manage
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/SetPasswordModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Manage/Login:
        post:
            tags:
                - Manage
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/AddLoginModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

        delete:
            tags:
                - Manage
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/RemoveLoginModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Manage/TwoFactor:
        get:
            tags:
                - Manage
            produces:
                - application/json
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel[TwoFactorModel]'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

        post:
            tags:
                - Manage
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/EnableTwoFactorModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

        delete:
            tags:
                - Manage
            produces:
                - application/json
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/Token:
        post:
            tags:
                - Token
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/GetTokenModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel[JwtModel]'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'

    /api/User:
        get:
            tags:
                - User
            produces:
                - application/json
            parameters:
                - name: page
                  in: query
                  required: false
                  type: integer
                  format: int32
                  default: 1
                - name: size
                  in: query
                  required: false
                  type: integer
                  format: int32
                  default: 10
                - name: search
                  in: query
                  required: false
                  type: string
                - name: sort
                  in: query
                  required: false
                  type: string
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel[UserListModel]'
                401:
                    description: Unauthorized

        post:
            tags:
                - User
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/CreateUserModel'
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized

    '/api/User/{id}':
        get:
            tags:
                - User
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel[UserModel]'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

        put:
            tags:
                - User
            consumes:
                - application/json
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                - name: model
                  in: body
                  required: false
                  schema:
                      $ref: '#/definitions/UpdateUserModel'

            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

        delete:
            tags:
                - User
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

    '/api/User/{id}/Lock':
        put:
            tags:
                - User
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

    '/api/User/{id}/Unlock':
        put:
            tags:
                - User
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
            responses:
                200:
                    description: Success
                    schema:
                        $ref: '#/definitions/ResponseModel'
                400:
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/ResponseModel'
                401:
                    description: Unauthorized
                404:
                    description: Not Found
                    schema:
                        $ref: '#/definitions/ResponseModel'

definitions:
    ResponseModel:
        properties:
            messages:
                type: array
                items:
                    type: string

    RegisterModel:
        required:
            - password
            - emailAddress
            - firstName
            - lastName
            - dateOfBirth
        properties:
            password:
                format: password
                type: string
            emailAddress:
                type: string
            firstName:
                maxLength: 256
                type: string
            lastName:
                maxLength: 256
                type: string
            dateOfBirth:
                format: date
                type: string

    RegisterExternalModel:
        required:
            - emailAddress
            - firstName
            - lastName
            - dateOfBirth
        properties:
            provider:
                enum:
                    - facebook
                    - google
                type: string
            accessToken:
                type: string
            emailAddress:
                type: string
            firstName:
                maxLength: 256
                type: string
            lastName:
                maxLength: 256
                type: string
            dateOfBirth:
                format: date
                type: string

    ForgotPasswordModel:
        required:
            - emailAddress
        properties:
            emailAddress:
                type: string

    ResetPasswordModel:
        required:
            - code
            - emailAddress
            - newPassword
        properties:
            code:
                type: string
            emailAddress:
                type: string
            newPassword:
                format: password
                type: string

    ResponseModel[ProfileModel]:
        properties:
            data:
                $ref: '#/definitions/ProfileModel'
            messages:
                type: array
                items:
                    type: string

    ProfileModel:
        properties:
            emailAddress:
                type: string
            firstName:
                type: string
            lastName:
                type: string
            dateOfBirth:
                format: date-time
                type: string
            hasPassword:
                type: boolean
            emailConfirmed:
                type: boolean
            twoFactorEnabled:
                type: boolean
            gravatarUrl:
                type: string
            logins:
                type: array
                items:
                    $ref: '#/definitions/ExternalLoginModel'

    ExternalLoginModel:
        properties:
            provider:
                type: string
            externalId:
                type: string

    UpdateProfileModel:
        required:
            - emailAddress
            - firstName
            - lastName
            - dateOfBirth
        properties:
            emailAddress:
                type: string
            firstName:
                maxLength: 256
                type: string
            lastName:
                maxLength: 256
                type: string
            dateOfBirth:
                format: date
                type: string

    ConfirmEmailModel:
        required:
            - code
        properties:
            code:
                type: string

    ChangePasswordModel:
        required:
            - currentPassword
            - newPassword
        properties:
            currentPassword:
                format: password
                type: string
            newPassword:
                format: password
                type: string

    SetPasswordModel:
        required:
            - newPassword
        properties:
            newPassword:
                format: password
                type: string

    AddLoginModel:
        required:
            - provider
            - accessToken
        properties:
            provider:
                enum:
                    - facebook
                    - google
                type: string
            accessToken:
                type: string

    RemoveLoginModel:
        required:
            - provider
            - externalId
        properties:
            provider:
                type: string
            externalId:
                type: string

    ResponseModel[TwoFactorModel]:
        properties:
            data:
                $ref: '#/definitions/TwoFactorModel'
            messages:
                type: array
                items:
                    type: string

    TwoFactorModel:
        properties:
            authenticatorUri:
                type: string
            secret:
                type: string

    EnableTwoFactorModel:
        required:
            - verificationCode
        properties:
            verificationCode:
                type: string

    GetTokenModel:
        properties:
            grantType:
                enum:
                    - Password
                    - RefreshToken
                    - External
                    - TwoFactor
                type: string
            emailAddress:
                type: string
            password:
                type: string
            provider:
                enum:
                    - facebook
                    - google
                type: string
            accessToken:
                type: string
            verificationCode:
                type: string
            refreshToken:
                type: string

    ResponseModel[JwtModel]:
        properties:
            data:
                $ref: '#/definitions/JwtModel'
            messages:
                type: array
                items:
                    type: string

    JwtModel:
        properties:
            accessToken:
                type: string
            refreshToken:
                type: string

    ResponseModel[UserListModel]:
        properties:
            data:
                $ref: '#/definitions/UserListModel'
            messages:
                type: array
                items:
                    type: string

    UserListModel:
        properties:
            search:
                type: string
            sort:
                type: string
            items:
                type: array
                items:
                    $ref: '#/definitions/UserSummaryModel'
            page:
                format: int32
                type: integer
            size:
                format: int32
                type: integer
            totalCount:
                format: int32
                type: integer
            totalPages:
                format: int32
                type: integer
            hasPreviousPage:
                type: boolean
            hasNextPage:
                type: boolean

    UserSummaryModel:
        properties:
            id:
                type: string
            emailAddress:
                type: string
            firstName:
                type: string
            lastName:
                type: string
            isLockedOut:
                type: boolean
            hasPassword:
                type: boolean
            emailConfirmed:
                type: boolean
            twoFactorEnabled:
                type: boolean
            gravatarUrl:
                type: string

    CreateUserModel:
        required:
            - password
            - emailAddress
            - firstName
            - lastName
            - dateOfBirth
        properties:
            password:
                format: password
                type: string
            roles:
                type: array
                items:
                    type: string
            emailAddress:
                type: string
            firstName:
                maxLength: 256
                type: string
            lastName:
                maxLength: 256
                type: string
            dateOfBirth:
                format: date
                type: string

    ResponseModel[UserModel]:
        properties:
            data:
                $ref: '#/definitions/UserModel'
            messages:
                type: array
                items:
                    type: string

    UserModel:
        properties:
            dateOfBirth:
                format: date-time
                type: string
            roles:
                type: array
                items:
                    type: string
            id:
                type: string
            emailAddress:
                type: string
            firstName:
                type: string
            lastName:
                type: string
            isLockedOut:
                type: boolean
            hasPassword:
                type: boolean
            emailConfirmed:
                type: boolean
            twoFactorEnabled:
                type: boolean
            gravatarUrl:
                type: string

    UpdateUserModel:
        required:
            - emailAddress
            - firstName
            - lastName
            - dateOfBirth
        properties:
            roles:
                type: array
                items:
                    type: string
            emailAddress:
                type: string
            firstName:
                maxLength: 256
                type: string
            lastName:
                maxLength: 256
                type: string
            dateOfBirth:
                format: date
                type: string
